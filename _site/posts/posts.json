[
  {
    "path": "posts/2021-09-21-my-data-visualizations-in-2020/",
    "title": "My dataviz in 2020",
    "description": "One scatter plot, one animated scatter plot, one map and one table on industrial park, COVID-19 and well-being",
    "author": [],
    "date": "2021-09-21",
    "categories": [
      "data-visualization",
      "Datawrapper",
      "ggplot2",
      "gganimate",
      "The-Jakarta-Post"
    ],
    "contents": "\r\nI created dozens of data visualizations on various topics in 2020 both for work and personal projects. From COVID-19 to industrial park.\r\nI published my first “data-driven story” on poverty in Jakarta on The Jakarta Post in February last year. Aside from analyzing data and creating visualizations for work, I also do it outside work, mostly for learning. I usually publish the result on my Twitter account.\r\nHere’s my favorite data visualizations from last year, with a few improvements.\r\n\r\n\r\n\r\n\r\n\r\n\r\nTwitter\r\n\r\nJune 20, 2020\r\n\r\n\r\n\r\n\r\n!function(){\"use strict\";window.addEventListener(\"message\",(function(e){if(void 0!==e.data[\"datawrapper-height\"]){var t=document.querySelectorAll(\"iframe\");for(var a in e.data[\"datawrapper-height\"])for(var r=0;r<t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data[\"datawrapper-height\"][a]+\"px\"}}}))}();\r\n\r\n\r\n\r\nThe Jakarta Post\r\n\r\nJuly 17, 2020\r\n\r\n\r\n\r\n\r\n!function(){\"use strict\";window.addEventListener(\"message\",(function(a){if(void 0!==a.data[\"datawrapper-height\"])for(var e in a.data[\"datawrapper-height\"]){var t=document.getElementById(\"datawrapper-chart-\"+e)||document.querySelector(\"iframe[src*='\"+e+\"']\");t&&(t.style.height=a.data[\"datawrapper-height\"][e]+\"px\")}}))}();\r\n\r\n\r\n\r\nTwitter\r\n\r\nJuly 19, 2020\r\n\r\n\r\n\r\n\r\n!function(){\"use strict\";window.addEventListener(\"message\",(function(e){if(void 0!==e.data[\"datawrapper-height\"]){var t=document.querySelectorAll(\"iframe\");for(var a in e.data[\"datawrapper-height\"])for(var r=0;r<t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data[\"datawrapper-height\"][a]+\"px\"}}}))}();\r\n\r\n\r\n\r\n\r\n\r\n\r\nTwitter\r\n\r\nSep. 9, 2020\r\n\r\n\r\n\r\n\r\n\r\nShow code\r\n\r\n# Packages ----------------------------------------------------------------\r\n\r\nlibrary(tidyverse)\r\nlibrary(gapminder)\r\nlibrary(gganimate)\r\n\r\n# Data --------------------------------------------------------------------\r\n\r\nasean_5 <- c(\"Singapore\", \"Philippines\", \"Thailand\", \"Malaysia\")\r\n\r\ngapminder_grouped <- gapminder %>% \r\n  mutate(\r\n    pop = pop / 1000000,\r\n    group = case_when(\r\n      country == \"Indonesia\" ~ \"Indonesia\",\r\n      country %in% asean_5 ~ \"ASEAN-5\",\r\n      TRUE ~ \"Rest of the world\"\r\n    )\r\n  )\r\n\r\n# Chart -------------------------------------------------------------------\r\n\r\nx_axis_break <- c(100, 1000, 10000, 100000, 1000000)\r\n\r\ncolor_primary <- \"#757575\"\r\ncolor_primary_light <- \"#E0E0E0\"\r\n\r\ngapminder_chart <- ggplot(gapminder_grouped, aes(gdpPercap, lifeExp)) +\r\n  geom_point(\r\n    aes(fill = group, size = pop),\r\n    pch = 21, \r\n    color = \"white\", \r\n    alpha = 0.85\r\n  ) +\r\n  scale_x_log10(\r\n    breaks = x_axis_break,\r\n    labels = format(x_axis_break, scientific = FALSE, big.mark = \",\"),\r\n    limits = c(100, 1000000)\r\n  ) +\r\n  scale_y_continuous(\r\n    breaks = seq(0, 100, 20),\r\n    limits = c(0, 100),\r\n    expand = c(0, 0),\r\n    position = \"right\"\r\n  ) +\r\n  scale_fill_manual(\r\n    values = c(\r\n      \"Indonesia\" = \"#2477B3\",\r\n      \"ASEAN-5\" = \"#55CBF2\",\r\n      \"Rest of the world\" = \"#BDBDBD\"\r\n    )\r\n  ) +\r\n  scale_size_binned(\r\n    name = \"Population (in millons)\",\r\n    breaks = seq(0, 1500, 300),\r\n    limits = c(0, 1500),\r\n    labels = format(seq(0, 1500, 300), scientific = FALSE, big.mark = \",\")\r\n  ) +\r\n  guides(\r\n    fill = guide_legend(\r\n      title = NULL, \r\n      label.position = \"left\",\r\n      label.hjust = 1,\r\n      override.aes = list(size = 2.5)\r\n    ),\r\n    size = guide_bins(\r\n      title.position = \"top\",\r\n      title.hjust = 1,\r\n      label.theme = element_text(size = 6.6, color = color_primary),\r\n      direction = \"horizontal\",\r\n      override.aes = list(fill = \"#BDBDBD\")\r\n    )\r\n  ) +\r\n  labs(\r\n    title = \"Getting better, but not enough\",\r\n    subtitle = paste0(\r\n      \"Life expectancy (in years) and GDP per capita (in international dollars in 2005 prices)\",\r\n      \"\\nYear: {frame_time}\"    \r\n    ),\r\n    x = \"GDP per capita\\n(in log scale)\",\r\n    y = \"Life expectancy\",\r\n    caption = \"Chart: Dzulfiqar Fathur Rahman | Source: Gapminder\"\r\n  ) +\r\n  theme(\r\n    text = element_text(size = 12, color = color_primary),\r\n    axis.title = element_text(size = rel(0.75)),\r\n    axis.text = element_text(size = rel(0.75), color = color_primary),\r\n    axis.line.x = element_line(color = \"black\"),\r\n    axis.ticks.x = element_line(color = \"black\"),\r\n    axis.ticks.y = element_blank(),\r\n    panel.background = element_rect(fill = \"#FFFFFF\"),\r\n    panel.grid.major.x  = element_line(color = color_primary_light),\r\n    panel.grid.major.y = element_line(color = color_primary_light),\r\n    panel.grid.minor = element_blank(),\r\n    plot.title = element_text(\r\n      face = \"bold\", \r\n      size = rel(1),\r\n      color = \"black\", \r\n      margin = margin(b = 5)\r\n    ),\r\n    plot.subtitle = element_text(\r\n      size = rel(0.75), \r\n      color = color_primary, \r\n      margin = margin(b = 5)\r\n    ),\r\n    plot.title.position = \"plot\",\r\n    plot.caption = element_text(\r\n      size = rel(0.7),\r\n      color = \"#9E9E9E\",\r\n      hjust = 0,\r\n      margin = margin(t = 5)\r\n    ),\r\n    plot.caption.position = \"plot\",\r\n    legend.margin = margin(0, unit = \"mm\"),\r\n    legend.title = element_text(size = rel(0.7)),\r\n    legend.text = element_text(size = rel(0.7)),\r\n    legend.key = element_blank(),\r\n    legend.key.height = unit(0.35, \"mm\"),\r\n    legend.position = c(0.75, 0.4),\r\n    legend.justification = \"left\",\r\n    plot.margin = margin(0, unit = \"mm\")\r\n  )\r\n\r\ngapminder_animated <- gapminder_chart +\r\n  transition_time(year) +\r\n  ease_aes()\r\n\r\nanim_save(\r\n  \"gapminder_animated.gif\",\r\n  animation = gapminder_animated,\r\n  width = 6,\r\n  height = 3.708,\r\n  units = \"in\",\r\n  res = 150\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-09-21-my-data-visualizations-in-2020/Figures/Preview_image.png",
    "last_modified": "2021-09-21T20:02:57+07:00",
    "input_file": {},
    "preview_width": 1280,
    "preview_height": 640
  }
]
